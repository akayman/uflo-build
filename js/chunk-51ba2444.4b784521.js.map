{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./src/components/frames-comp.vue?2f68","webpack:///src/components/frames-comp.vue","webpack:///./src/components/frames-comp.vue?42d3","webpack:///./src/components/frames-comp.vue?9c1a","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/modules/es.array.from.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/components/frames-comp.vue?1f19"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","render","_vm","this","_h","$createElement","_c","_self","staticClass","editingFrameIndex","codeIsRunning","ref","attrs","editingTransformation","editingTransformationIndex","desmosUrls","on","onCloseTransAdd","_e","updateList","staticStyle","_v","_l","state","index","key","refInFor","style","frameIds","changingTargetComponent","copyingComps","selectingComps","selectedExpressionId","onAddTransformation","onSelectTransformation","onChangeTarget","onDuplicateTransformation","onCopyTransformation","onPasteTransformation","deleteComp","onChangeFrameId","onDeleteUndefinedFrame","staticRenderFns","data","stateList","viewBottom","viewTop","flomotionShowing","frameId","componentElement","changedWithUndoRedo","alert","props","type","Boolean","components","FrameComp","TransformationAddComp","watch","handler","$emit","deep","methods","onResetStateList","JSON","stringify","notSameStateIndexes","forEach","st","transformation","newStates","push","startFrame","endFrame","showDetails","onSortStateList","$store","dispatch","onSetStateList","states","desmosId","window","expidx","compId","attribute","value","latex","attributeOption","transformOption","sliderBounds","customAttr","customTrans","modifier","transIdx","sort","tridx","setTimeout","filter","splice","parse","element","oldIndex","newIndex","frameIndex","oldFrameId","document","getElementById","scrollIntoView","transes","a","b","setAutoStateAndDetectAttribute","item","id","compIndex","expressions","domain","isNaN","ilatex","lLatex","setComponentFromDesmos","exp","idx","folderIndex","e","altKey","tTransformation","slidersIndexes","shortcutFuncs","event","created","addEventListener","destroyed","removeEventListener","component","$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","start","deleteCount","insertCount","actualDeleteCount","A","k","to","O","actualStart","argumentsLength","arguments","TypeError","checkCorrectnessOfIteration","INCORRECT_ITERATION","iterable","stat","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","unsupportedIterableToArray","F","s","done","f","err","normalCompletion","didErr","step","next","_e2","$map","map","callbackfn","undefined"],"mappings":"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","file":"js/chunk-51ba2444.4b784521.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"framerep-w no--highlight\"},[(_vm.editingFrameIndex > -1 && !_vm.codeIsRunning)?_c('TransformationAddComp',{ref:\"transformationComp\",attrs:{\"editingFrameIndex\":_vm.editingFrameIndex,\"transformation\":_vm.editingTransformation,\"transformationIndex\":_vm.editingTransformationIndex,\"desmosUrls\":_vm.desmosUrls},on:{\"on-close\":_vm.onCloseTransAdd}}):_vm._e(),(_vm.updateList === 0)?_c('div',[(_vm.codeIsRunning)?_c('div',{staticClass:\"framerep\",staticStyle:{\"margin-top\":\"50vh\",\"margin-bottom\":\"50vh\"}},[_c('div',{staticClass:\"framerep-text\"},[_vm._v(\"SCROLL ME !\")])]):_vm._e(),_vm._l((_vm.stateList),function(state,index){return _c('FrameComp',{key:index,ref:\"frameComp\",refInFor:true,style:(_vm.codeIsRunning ? 'margin-bottom: 65vh': ''),attrs:{\"frameIds\":_vm.frameIds,\"frameState\":state,\"changingTargetComponent\":_vm.changingTargetComponent,\"copyingComps\":_vm.copyingComps,\"selectingComps\":_vm.selectingComps,\"selectedExpressionId\":_vm.selectedExpressionId},on:{\"on-add-transformation\":_vm.onAddTransformation,\"on-select-transformation\":_vm.onSelectTransformation,\"on-change-target\":_vm.onChangeTarget,\"on-duplicate-transformation\":_vm.onDuplicateTransformation,\"on-copy-transformation\":_vm.onCopyTransformation,\"on-paste-transformation\":_vm.onPasteTransformation,\"on-delete-transformation\":_vm.deleteComp,\"on-change-frameId\":_vm.onChangeFrameId,\"on-delete-undefined-frame\":_vm.onDeleteUndefinedFrame}})})],2):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"framerep-w no--highlight\">\r\n      <TransformationAddComp\r\n        v-if=\"editingFrameIndex > -1 && !codeIsRunning\"\r\n        v-on:on-close=\"onCloseTransAdd\"\r\n        :editingFrameIndex=\"editingFrameIndex\"\r\n        :transformation=\"editingTransformation\"\r\n        :transformationIndex=\"editingTransformationIndex\"\r\n        :desmosUrls=\"desmosUrls\"\r\n        ref=\"transformationComp\"\r\n      />\r\n\r\n      <div v-if=\"updateList === 0\">\r\n        <div v-if=\"codeIsRunning\" class=\"framerep\" style=\"margin-top: 50vh; margin-bottom: 50vh;\">\r\n          <div class=\"framerep-text\">SCROLL ME !</div>\r\n        </div>\r\n        <FrameComp\r\n          v-for =\"(state, index) in stateList\" :key=\"index\"\r\n          :style=\"codeIsRunning ? 'margin-bottom: 65vh': ''\"\r\n          :frameIds=\"frameIds\"\r\n          :frameState=\"state\"\r\n          :changingTargetComponent=\"changingTargetComponent\"\r\n          :copyingComps=\"copyingComps\"\r\n          :selectingComps=\"selectingComps\"\r\n          :selectedExpressionId=\"selectedExpressionId\"\r\n          v-on:on-add-transformation=\"onAddTransformation\"\r\n          v-on:on-select-transformation=\"onSelectTransformation\"\r\n          v-on:on-change-target=\"onChangeTarget\"\r\n          v-on:on-duplicate-transformation=\"onDuplicateTransformation\"\r\n          v-on:on-copy-transformation=\"onCopyTransformation\"\r\n          v-on:on-paste-transformation=\"onPasteTransformation\"\r\n          v-on:on-delete-transformation=\"deleteComp\"\r\n          v-on:on-change-frameId=\"onChangeFrameId\"\r\n          v-on:on-delete-undefined-frame=\"onDeleteUndefinedFrame\"\r\n          ref=\"frameComp\"\r\n        />\r\n      </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      frameIds: [],\r\n      stateList: [],\r\n      viewBottom: '',\r\n      viewTop: '',\r\n      flomotionShowing: true,\r\n      editingFrameIndex: -1,\r\n      editingTransformation: {},\r\n      editingTransformationIndex: -1,\r\n      selectedExpressionId: '',\r\n      changingTargetComponent: {\r\n        frameId: '',\r\n        componentElement: -1,\r\n      },\r\n      copyingComps: [],\r\n      selectingComps: [],\r\n      changedWithUndoRedo: false,\r\n      updateList: 0,\r\n      alert: '',\r\n    }\r\n  },\r\n  props: {\r\n    desmosUrls: {\r\n      type: Array\r\n    },\r\n    codeIsRunning: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  components: {\r\n    FrameComp: () => import('../components/frame-comp'),\r\n    TransformationAddComp: () => import('../components/transformation-add-comp'),\r\n  },\r\n  watch: {\r\n    stateList: {\r\n      handler: function () {\r\n        this.$emit('on-update-stateList', this.stateList, this.changedWithUndoRedo);\r\n        this.changedWithUndoRedo = false;\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    onResetStateList (frameIds) {\r\n      if (JSON.stringify(this.frameIds) !== JSON.stringify(frameIds)) {\r\n        if (this.stateList[0] && this.frameIds[0]) {\r\n          this.frameIds = frameIds;\r\n          const states = this.stateList;\r\n          const newStates = [];\r\n  \r\n          // find not same frameIds in stateList\r\n          const notSameStateIndexes = states.map((s, idx) => {\r\n              return this.frameIds.some((f) => f !== s.startFrame) ? idx : \"\";\r\n            }).filter(String);\r\n          for (const frameId of this.frameIds) {\r\n            const sIndex = this.stateList.findIndex((s) => s.startFrame === frameId);\r\n            if (sIndex > -1) {\r\n              const pushingSt = this.stateList[sIndex];\r\n              pushingSt.startFrame = frameId;\r\n              newStates.push(pushingSt);\r\n            } else {\r\n              if (notSameStateIndexes[0] !== undefined) {\r\n                const nindex = notSameStateIndexes.shift();\r\n                const pushingSt = this.stateList[nindex];\r\n                pushingSt.startFrame = frameId;\r\n                newStates.push(pushingSt);\r\n              } else {\r\n                newStates.push({\r\n                  startFrame: frameId,\r\n                  endFrame: \"\",\r\n                  type: \"enter\",\r\n                  transformation: [],\r\n                  showDetails: false,\r\n                });\r\n              }\r\n            }\r\n          }\r\n\r\n          // fill remained transformations if we have greater stateList\r\n          notSameStateIndexes.forEach((nsi, idx) => {\r\n            const st = this.stateList[nsi]\r\n            if (st.transformation[0]) {\r\n              newStates.push({\r\n                startFrame: `undefined-frame-${idx}`,\r\n                endFrame: st.endFrame,\r\n                type: st.type,\r\n                transformation: st.transformation,\r\n                showDetails: st.showDetails,\r\n              });\r\n            }\r\n          });\r\n\r\n          this.stateList = newStates;\r\n          this.onSortStateList();\r\n        } else {\r\n          this.frameIds = frameIds;\r\n          for (const frameId of this.frameIds) {\r\n            const sIndex = this.stateList.findIndex((s) => s.startFrame === frameId);\r\n            if (sIndex < 0) {\r\n              this.stateList.push({\r\n                startFrame: frameId,\r\n                endFrame: \"\",\r\n                type: \"enter\",\r\n                transformation: [],\r\n                showDetails: false,\r\n              });\r\n            }\r\n          }\r\n        }\r\n        this.$store.dispatch('auth/setAlert', 'frame ids reseted');\r\n      }\r\n    },\r\n    onSetStateList (states, changedWithUndoRedo) {\r\n      this.changedWithUndoRedo = changedWithUndoRedo;\r\n      this.stateList = states;\r\n    },\r\n    onAddTransformation (frameId) {\r\n      this.editingTransformationIndex = -1;\r\n      this.editingTransformation = {}\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId);\r\n      if (index > -1) {\r\n        this.editingFrameIndex = index;\r\n        this.stateList[index].showDetails = true;\r\n        this.stateList[index].transformation.push({\r\n          desmosId: window.desmosId || 1,\r\n          expidx: \"\",\r\n          compId: \"\",\r\n          attribute: \"\",\r\n          value: \"\",\r\n          latex: \"\",\r\n          attributeOption: [],\r\n          transformOption: [],\r\n          sliderBounds: {},\r\n          customAttr: \"\",\r\n          customTrans: \"\",\r\n        });\r\n        this.editingTransformationIndex = this.stateList[index].transformation.length-1;\r\n        this.editingTransformation = this.stateList[index].transformation[this.editingTransformationIndex];\r\n        this.changingTargetComponent = { frameId: frameId, componentElement: this.editingTransformationIndex }\r\n      }\r\n    },\r\n    onSelectTransformation (e, frameId, transIdx) {\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId)\r\n      const modifier = e.ctrlKey || e.metaKey;\r\n      if (index > -1) {\r\n        if (modifier) {\r\n          if (!this.selectingComps[0] || (this.selectingComps[0] && this.selectingComps[0].frameId === frameId)) {\r\n            this.selectingComps.push({\r\n              frameId: frameId,\r\n              componentElement: transIdx,\r\n            });\r\n          }\r\n          // reset all\r\n          this.editingTransformationIndex = -1;\r\n          this.editingTransformation = {}\r\n          this.editingFrameIndex = -1;\r\n          this.selectedExpressionId = '';\r\n          this.changingTargetComponent = { frameId: '', componentElement: -1, };\r\n        } else if (e.shiftKey && this.selectingComps[0]) {\r\n          if (this.selectingComps[0].frameId === frameId) {\r\n            this.selectingComps = this.selectingComps.sort((a, b) => b.componentElement - a.componentElement);\r\n            let tridx = this.selectingComps[0].componentElement;\r\n            if (tridx < transIdx) {\r\n              for(tridx; tridx < transIdx+1; tridx++) {\r\n                this.selectingComps.push({\r\n                  frameId: frameId,\r\n                  componentElement: tridx,\r\n                });\r\n              }\r\n            } else {\r\n              for(tridx; tridx > transIdx-1; tridx--) {\r\n                this.selectingComps.push({\r\n                  frameId: frameId,\r\n                  componentElement: tridx,\r\n                });\r\n              }\r\n            }\r\n          }\r\n          // reset all\r\n          this.editingTransformationIndex = -1;\r\n          this.editingTransformation = {}\r\n          this.editingFrameIndex = -1;\r\n          this.selectedExpressionId = '';\r\n          this.changingTargetComponent = { frameId: '', componentElement: -1, };\r\n          setTimeout(() => {\r\n            this.$refs.transformationComp ? this.$refs.transformationComp.getCompId(this.editingTransformation?.desmosId) : '';\r\n          }, 100);\r\n        } else {\r\n          // reset selects\r\n          this.selectingComps = [{ frameId: frameId, componentElement: transIdx }];\r\n          this.editingTransformationIndex = transIdx;\r\n          this.editingTransformation = {}\r\n          this.editingFrameIndex = index;\r\n          this.stateList[index].showDetails = true;\r\n          this.editingTransformation = this.stateList[index].transformation[this.editingTransformationIndex];\r\n          this.selectedExpressionId = this?.editingTransformation?.compId;\r\n          this.changingTargetComponent = { frameId: '', componentElement: -1, };\r\n          setTimeout(() => {\r\n            this.$refs.transformationComp ? this.$refs.transformationComp.getCompId(this.editingTransformation?.desmosId) : '';\r\n          }, 100);\r\n        }\r\n        // remove same transformations\r\n        this.selectingComps = this.selectingComps.filter((v,i,a)=>\r\n          a.findIndex(t=>(t.frameId === v.frameId && t.componentElement === v.componentElement))===i\r\n        );\r\n      }\r\n    },\r\n    onChangeTarget (frameId, transIdx) {\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId)\r\n      if (index > -1) {\r\n        this.changingTargetComponent = { frameId: frameId, componentElement: transIdx }\r\n        this.$store.dispatch('auth/setAlert', 'target has changed in frame id ' + frameId);\r\n      }\r\n    },\r\n    onDuplicateTransformation(frameId, transIdx) {\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId);\r\n      if (index > -1) {\r\n        // to work with shortcut and multiple\r\n        if (\r\n          (this.selectingComps[0] && this.selectingComps[0].frameId === frameId && this.selectingComps[0].componentElement === transIdx) ||\r\n          !this.selectingComps[0]\r\n        ) {\r\n          const transformation = JSON.parse(JSON.stringify(this.stateList[index].transformation[transIdx]));\r\n          this.stateList[index].transformation.splice(transIdx, 0, {\r\n            desmosId: transformation.desmosId || 1,\r\n            expidx: transformation.expidx,\r\n            compId: transformation.compId,\r\n            attribute: transformation.attribute,\r\n            value: transformation.value,\r\n            latex: transformation.latex,\r\n            attributeOption: transformation.attributeOption,\r\n            transformOption: transformation.transformOption,\r\n            sliderBounds: transformation.sliderBounds,\r\n            customAttr: transformation.customAttr,\r\n            customTrans: transformation.customTrans,\r\n          });\r\n        } else {\r\n          for (const sComp of this.selectingComps) {\r\n            const copyingIndex = this.stateList.findIndex((sl) => sl.startFrame === sComp.frameId);\r\n            const comp = JSON.parse(JSON.stringify(this.stateList[copyingIndex].transformation[sComp.componentElement]));\r\n            if (comp) {\r\n              this.stateList[index].transformation.splice(transIdx, 0, {\r\n                desmosId: comp.desmosId || 1,\r\n                expidx: comp.expidx,\r\n                compId: comp.compId,\r\n                attribute: comp.attribute,\r\n                value: comp.value,\r\n                latex: comp.latex,\r\n                attributeOption: comp.attributeOption,\r\n                transformOption: comp.transformOption,\r\n                sliderBounds: comp.sliderBounds,\r\n                customAttr: comp.customAttr,\r\n                customTrans: comp.customTrans,\r\n              });\r\n            }\r\n          }\r\n        }\r\n        this.$store.dispatch('auth/setAlert', 'component has duplicated in frame id' + frameId);\r\n      }\r\n    },\r\n    onCopyTransformation (frameId, transIdx) {\r\n      if (frameId && transIdx > -1 && \r\n        (!this.selectingComps[0] || this.selectingComps.indexOf({ frameId: frameId, componentElement: transIdx }) === -1)\r\n      ) {\r\n        this.copyingComps = [{ frameId: frameId, componentElement: transIdx }]\r\n      } else {\r\n        this.copyingComps = JSON.parse(JSON.stringify(this.selectingComps));\r\n      }\r\n      this.$store.dispatch('auth/setAlert', 'component has copied');\r\n    },\r\n    onPasteTransformation(frameId, transIdx) {\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId);\r\n      if (index > -1 && this.copyingComps[0]) {\r\n        for (const cComp of this.copyingComps) {\r\n          const copyingIndex = this.stateList.findIndex((sl) => sl.startFrame === cComp.frameId);\r\n          const comp = JSON.parse(JSON.stringify(this.stateList[copyingIndex].transformation[cComp.componentElement]));\r\n          if (comp) {\r\n            this.stateList[index].transformation.splice(transIdx+1, 0, {\r\n              desmosId: comp.desmosId || 1,\r\n              expidx: comp.expidx,\r\n              compId: comp.compId,\r\n              attribute: comp.attribute,\r\n              value: comp.value,\r\n              latex: comp.latex,\r\n              attributeOption: comp.attributeOption,\r\n              transformOption: comp.transformOption,\r\n              sliderBounds: comp.sliderBounds,\r\n              customAttr: comp.customAttr,\r\n              customTrans: comp.customTrans,\r\n            });\r\n            if (comp.attribute.slice(0, 4) === 'SYNC') this.stateList[index].type = 'inView';\r\n          }\r\n        }\r\n      }\r\n    },\r\n    deleteComp(frameId, element) {\r\n      this.editingFrameIndex = -1;\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId)\r\n      if (index > -1 && frameId && element) {\r\n        this.editingTransformationIndex = -1;\r\n        this.editingTransformation = {};\r\n        this.changingTargetComponent = { frameId: '', componentElement: -1 }\r\n        this.stateList[index].transformation.splice(element, 1);\r\n      } else if (this.selectingComps[0]) {\r\n        for (const comp of this.selectingComps) {\r\n          const findex = this.stateList.findIndex((sl) => sl.startFrame === comp.frameId)\r\n          this.stateList[findex]?.transformation.splice(comp.componentElement, 1);\r\n        }\r\n        this.editingTransformationIndex = -1;\r\n        this.editingTransformation = {};\r\n        this.changingTargetComponent = { frameId: '', componentElement: -1 }\r\n        this.selectingComps = [];\r\n      }\r\n    },\r\n    onChangeFrameId (oldFrameId, frameId) {\r\n      const oldIndex = this.stateList.findIndex((sl) => sl.startFrame === oldFrameId)\r\n      const newIndex = this.stateList.findIndex((sl) => sl.startFrame === frameId)\r\n      const frameIndex = this.frameIds.findIndex(f => f === oldFrameId)\r\n      if (oldIndex > -1 && newIndex > -1 && frameIndex > -1) {\r\n        this.stateList[oldIndex].startFrame = frameId;\r\n        this.stateList[newIndex].startFrame = oldFrameId;\r\n        this.onSortStateList();\r\n        document.getElementById(frameId).scrollIntoView({ behavior: 'auto', block: 'center', inline: 'center' });\r\n      } else if (frameIndex < 0) {\r\n      // when old frame id is not valid or updated\r\n        const transes = JSON.parse(JSON.stringify(this.stateList[oldIndex].transformation));\r\n        transes.forEach(trans => {\r\n          this.stateList[newIndex].transformation.push(trans)\r\n        });\r\n        this.stateList.splice(oldIndex, 1);\r\n      }\r\n    },\r\n    onSortStateList () {\r\n      this.stateList = this.stateList.sort((a, b) => {\r\n        if (a.startFrame.slice(0, 15) === 'undefined-frame') return 1\r\n        if (b.startFrame.slice(0, 15) === 'undefined-frame') return -1\r\n        if (this.frameIds.indexOf(a.startFrame) < this.frameIds.indexOf(b.startFrame)) {\r\n          return -1\r\n        } else if (this.frameIds.indexOf(a.startFrame) > this.frameIds.indexOf(b.startFrame)) {\r\n          return 1\r\n        }\r\n        return 0\r\n      });\r\n      this.updateList = 1\r\n      this.updateList = 0\r\n    },\r\n    onDeleteUndefinedFrame (frameId) {\r\n      const confirm = window.confirm('are you sure to delete frame with id: ' + frameId);\r\n      const index = this.stateList.findIndex((sl) => sl.startFrame === frameId);\r\n       if (index > -1 && confirm) {\r\n        this.editingTransformationIndex = -1;\r\n        this.editingTransformation = {};\r\n        this.changingTargetComponent = { frameId: '', componentElement: -1 }\r\n        this.stateList.splice(index, 1);\r\n       }\r\n    },\r\n\r\n    setAutoStateAndDetectAttribute(id, index, element, expressions) {\r\n      const compIndex = this.stateList[index].transformation.findIndex((item, i) => {\r\n        return item.compId === id && i === element;\r\n      });\r\n      // reset all part of a transformation\r\n      this.stateList[index].transformation[compIndex].latex = \"\";\r\n      this.stateList[index].transformation[compIndex].sliderBounds = {};\r\n      this.stateList[index].transformation[compIndex].attributeOption = [\r\n        \"Hidden\",\r\n        \"Color\",\r\n        \"Select\",\r\n        \"Custom\",\r\n      ];\r\n\r\n      // detect desmos canvas\r\n      if (id === \"desmosCanvas\") {\r\n        this.stateList[index].transformation[compIndex].attribute = \"Math Boundary\";\r\n        this.stateList[index].transformation[compIndex].value = \"\";\r\n        this.stateList[index].transformation[compIndex].attributeOption = [\r\n          \"Math Boundary\", \"xAxisLabel\", \"yAxisLabel\"\r\n        ];\r\n      }\r\n      // auto change latex and state type\r\n      expressions.forEach((item, idx) => {\r\n        if (item.type === \"expression\" && item.id === id) {\r\n          this.stateList[index].transformation[compIndex].latex = item?.latex || \"\";\r\n          this.stateList[index].transformation[compIndex].expidx = idx+1;\r\n          const ilatex = item.latex.split(\"=\").pop();\r\n          if (item.domain && !isNaN(ilatex) && item.latex) {\r\n            this.stateList[index].type = \"inView\"\r\n            this.stateList[index].transformation[compIndex].attribute = \"SYNC\";\r\n            this.stateList[index].transformation[compIndex].value = \"\";\r\n            this.stateList[index].transformation[compIndex].attributeOption = [\r\n              \"SYNC\", \"SYNC-Custom\", \"SYNC-C-Backward\", \"SYNC-Backward\", \"SYNC-Constant\"\r\n            ];\r\n            this.stateList[index].transformation[compIndex].sliderBounds = item?.sliderBounds || item?.slider || { min: 0, max: 15, step: .01 }\r\n          } else {\r\n            const lLatex = item.latex.slice(1, 6);\r\n            if (lLatex === \"left(\") {\r\n              this.stateList[index].transformation[compIndex].attribute = \"\"\r\n              this.stateList[index].transformation[compIndex].value = \"\";\r\n              this.stateList[index].transformation[compIndex].attributeOption = [\r\n                \"Hidden\",\r\n                \"Color\",\r\n                \"Select\",\r\n                \"Custom\",\r\n                \"showLabel\",\r\n                \"pointActive\"\r\n              ];\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    setComponentFromDesmos(e, desmosId) {\r\n      const expressions = window[`calculator${desmosId}`].getExpressions();\r\n\r\n      // set expression id for selects\r\n      let id = window[`calculator${desmosId}`].selectedExpressionId;\r\n      this.selectedExpressionId = id;\r\n      if (this.changingTargetComponent.frameId && id) {\r\n        let expidx = -1;\r\n        const index = this.stateList.findIndex((sl) => sl.startFrame === this.changingTargetComponent.frameId)\r\n        const folderIndex = expressions.findIndex((exp, idx) => {\r\n          exp.id === id ? expidx = idx+1: '';\r\n          return exp.id === id && exp.type === \"folder\"\r\n        });\r\n        // select first exp after folder\r\n        folderIndex > -1 ? id = expressions[folderIndex + 1].id: '';\r\n        const tTransformation = this.stateList[index].transformation[this.changingTargetComponent.componentElement]\r\n        if (e && !e.altKey && index > -1) {\r\n          if (tTransformation?.compId !== id || !tTransformation?.compId) {\r\n            this.stateList[index].transformation[this.changingTargetComponent.componentElement].compId = id;\r\n            this.stateList[index].transformation[this.changingTargetComponent.componentElement].desmosId = desmosId;\r\n          }\r\n          this.setAutoStateAndDetectAttribute(\r\n            id,\r\n            index,\r\n            this.changingTargetComponent.componentElement,\r\n            expressions\r\n          );\r\n          this.changingTargetComponent = {\r\n            frameId: '',\r\n            componentElement: -1,\r\n          };\r\n        } else if (e && e.altKey && index > -1) {\r\n          if (!tTransformation.compId) {\r\n            this.stateList[index].transformation[this.changingTargetComponent.componentElement].compId = id;\r\n            this.stateList[index].transformation[this.changingTargetComponent.componentElement].desmosId = desmosId;\r\n            this.setAutoStateAndDetectAttribute(\r\n              id,\r\n              index,\r\n              this.changingTargetComponent.componentElement,\r\n              expressions\r\n            );\r\n          }\r\n          this.stateList[index].transformation.splice(\r\n            this.changingTargetComponent.componentElement+1, 0, {\r\n              desmosId: desmosId || 1,\r\n              compId: id,\r\n              expidx: expidx,\r\n              attribute: tTransformation.attribute,\r\n              value: tTransformation.value,\r\n              latex: tTransformation.latex,\r\n              attributeOption: tTransformation.attributeOption,\r\n              transformOption: tTransformation.transformOption,\r\n              sliderBounds: tTransformation.sliderBounds,\r\n              customAttr: tTransformation.customAttr,\r\n              customTrans: tTransformation.customTrans,\r\n            })\r\n        }\r\n\r\n      }\r\n\r\n      // update same ids and detect no ids\r\n      if (expressions && expressions[0]) {\r\n        // live update stateList\r\n        let slidersIndexes = [];\r\n        this.stateList.forEach((state) => {\r\n          slidersIndexes = state.transformation\r\n            .map((cp, idx) => {\r\n              const ilatex = cp && cp.latex ? cp.latex.split(\"=\").pop(): '';\r\n              return ilatex && !isNaN(ilatex) ? idx : \"\";\r\n            })\r\n            .filter(String);\r\n          for (const i in slidersIndexes) {\r\n            expressions.forEach((exp) => {\r\n              if(exp && exp.latex) {\r\n                const ilatex = exp.latex.split(\"=\").pop();\r\n                if (\r\n                  ilatex &&\r\n                  !isNaN(ilatex) &&\r\n                  state.transformation[slidersIndexes[i]].compId === exp.id &&\r\n                  state.transformation[slidersIndexes[i]].sliderBounds &&\r\n                  state.transformation[slidersIndexes[i]].attribute === \"SYNC\"\r\n                ) {\r\n                  state.transformation[slidersIndexes[i]].sliderBounds =\r\n                    exp.sliderBounds || { min: 0, max: 15, step: .01 }\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      // get compids again\r\n      setTimeout(() => {\r\n        this.$refs.transformationComp ? this.$refs.transformationComp.getCompId(this.editingTransformation?.desmosId) : '';\r\n      }, 100)\r\n    },\r\n\r\n    onCloseTransAdd () {\r\n      this.editingFrameIndex = -1;\r\n      this.editingTransformation = [];\r\n      this.editingTransformationIndex = -1;\r\n      this.changingTargetComponent = {\r\n        frameId: '',\r\n        componentElement: -1,\r\n      };\r\n      this.selectedExpressionId = ''\r\n    },\r\n\r\n    shortcutFuncs (event) {\r\n      const modifier = event.ctrlKey || event.metaKey;\r\n      if (modifier && (event.key === \"c\" || event.key === \"C\")) {\r\n          this.onCopyTransformation();\r\n      } else if (modifier && (event.key === \"v\" || event.key === \"V\")) {\r\n        this.onPasteTransformation(this.selectingComps[this.selectingComps.length-1]?.frameId, this.selectingComps[this.selectingComps.length-1]?.componentElement);\r\n      } else if (modifier && (event.key === \"d\" || event.key === \"D\")) {\r\n        this.onDuplicateTransformation(this.selectingComps[this.selectingComps.length-1]?.frameId, this.selectingComps[this.selectingComps.length-1]?.componentElement);\r\n      } else if (modifier && (event.key === \"q\" || event.key === \"Q\")) {\r\n        this.onChangeTarget(this.selectingComps[this.selectingComps.length-1]?.frameId, this.selectingComps[this.selectingComps.length-1]?.componentElement);\r\n      } else if (!modifier && event.shiftKey && event.key === \"Backspace\") {\r\n        this.deleteComp();\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    window.addEventListener(\"keyup\", this.shortcutFuncs);\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"keyup\", this.shortcutFuncs);\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.vertical-center {\r\n  position: sticky;\r\n  top: 50%;\r\n  margin-left: -20px;\r\n  width: 10px;\r\n}\r\n.no--highlight {\r\n  -webkit-user-select: none;\r\n  -webkit-touch-callout: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./frames-comp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./frames-comp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./frames-comp.vue?vue&type=template&id=57135f1a&scoped=true&\"\nimport script from \"./frames-comp.vue?vue&type=script&lang=js&\"\nexport * from \"./frames-comp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./frames-comp.vue?vue&type=style&index=0&id=57135f1a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"57135f1a\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./frames-comp.vue?vue&type=style&index=0&id=57135f1a&scoped=true&lang=css&\""],"sourceRoot":""}